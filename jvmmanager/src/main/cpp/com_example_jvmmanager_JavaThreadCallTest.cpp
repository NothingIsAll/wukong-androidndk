/* DO NOT EDIT THIS FILE - it is machine generated */

#define LOG_TAG "jniJavaThreadCallJNITest"

#include <jni.h>
#include <jvmmanager/JvmOBJ.h>
/* Header for class com_example_jvmmanager_JavaThreadCallTest */
#include "TLMicLog.h"
#include "JniThreadCallJavaCallBack.h"
#include "JniThreadTest.h"

#ifndef _Included_com_example_jvmmanager_JavaThreadCallJNITest
#define _Included_com_example_jvmmanager_JavaThreadCallJNITest

JniThreadTest* jniThreadTest = 0;
JniThreadCallJavaCallBack* jniThreadCallJavaCallBack;

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_jvmmanager_JavaThreadCallTest
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_example_jvmmanager_JavaThreadCallJNITest_init
  (JNIEnv *, jobject){
    DLOG("line=%03d,fun=%s",__LINE__,__FUNCTION__);
    if(!jniThreadTest){
        jniThreadTest = new JniThreadTest();
        jniThreadTest->setCallBack(jniThreadCallJavaCallBack);
    }
    jniThreadTest->syncrun();
  }

/*
 * Class:     com_example_jvmmanager_JavaThreadCallTest
 * Method:    createThread
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_example_jvmmanager_JavaThreadCallJNITest_createThread
  (JNIEnv *, jobject, jint count){
    DLOG("line=%03d,fun=%s count =%d",__LINE__,__FUNCTION__,count);

    jniThreadTest = new JniThreadTest();
    jniThreadTest->setCallBack(jniThreadCallJavaCallBack);
    jniThreadTest->runThreadCount(count);
  }

/*
 * Class:     com_example_jvmmanager_JavaThreadCallTest
 * Method:    destory
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_example_jvmmanager_JavaThreadCallJNITest_destory
  (JNIEnv *, jobject){
    DLOG("line=%03d,fun=%s",__LINE__,__FUNCTION__);
    jniThreadTest->cancellThread();
  }
JavaVM * gJvm;
int JNI_OnLoad(JavaVM* jvm, void* reserved) {
    gJvm = jvm;
    JvmOBJ::setJvm(jvm);
    JNIEnv *env;
    if (jvm->GetEnv((void**) &env, JNI_VERSION_1_6) != JNI_OK) {
        return -1;
    }
    return JNI_VERSION_1_6;
}

void JNI_OnUnload(JavaVM* jvm, void* reserved) {
    JNIEnv *env;
    if (jvm->GetEnv((void**) &env, JNI_VERSION_1_6) != JNI_OK) {
        return;
    }


}

#ifdef __cplusplus
}
#endif
#endif
extern "C"
JNIEXPORT void JNICALL
Java_com_example_jvmmanager_JavaThreadCallJNITest_asyncinit(JNIEnv *env, jobject thiz) {
  // TODO: implement asyncinit()
    DLOG("line=%03d,fun=%s",__LINE__,__FUNCTION__);
    if(!jniThreadTest){
        jniThreadTest = new JniThreadTest();
        jniThreadTest->setCallBack(jniThreadCallJavaCallBack);
    }
    jniThreadTest->syncrun();


}extern "C"
JNIEXPORT void JNICALL
Java_com_example_jvmmanager_JavaThreadCallJNITest_setjnicalljavaobj(JNIEnv *env, jobject thiz,
                                                                    jobject jobj) {
    // TODO: implement setjnicalljavaobj()
    DLOG("line=%03d,fun=%s",__LINE__,__FUNCTION__);
    jobject javaplayeng = env->NewGlobalRef(jobj);
    jniThreadCallJavaCallBack = new JniThreadCallJavaCallBack(javaplayeng);
}